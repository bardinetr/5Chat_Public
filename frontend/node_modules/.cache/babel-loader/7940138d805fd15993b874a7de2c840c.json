{"remainingRequest":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\babel-loader\\lib\\index.js!L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\src\\components\\UserSettings.vue?vue&type=script&lang=js&","dependencies":[{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\src\\components\\UserSettings.vue","mtime":1632764840811},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserSettings.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"user-settings-compo\">\r\n    <div>\r\n      Session Closes In : <b>{{ timeleft }}</b> seconds\r\n    </div>\r\n    <div style=\"margin: 10px 5px\">\r\n      <div style=\"margin-top: 1rem; max-width: 16rem; display: flex\">\r\n        <b>Account settings for :</b>\r\n        <a id=\"twitter-name\" v-bind:href=\"userLink\" target=\"_blank\"\r\n          ><h1 v-if=\"username !== ''\" style=\"font-size: inherit\">@</h1>\r\n          {{ username }}\r\n        </a>\r\n      </div>\r\n      <div v-if=\"twitterAccountStatus == 'accountIsPrivate'\">This account is private</div>\r\n      <div v-if=\"readAccountStatus == 'failed'\">Error reading account, try again later, report this on Discord !</div>\r\n      <div v-if=\"readAccountStatus == 'notmatching'\">\r\n        User id and user name do not match, if you havent modified the URL, contact me on Discord !\r\n      </div>\r\n      <div style=\"max-width: 15rem; display: flex\">\r\n        <b-button class=\"button-delete\" :disabled=\"busy\" variant=\"outline-danger\" @click=\"deleteMyData\"\r\n          ><span style=\"font-size: small\"> Delete my data </span></b-button\r\n        >\r\n        <transition name=\"load\">\r\n          <div class=\"loading-icon-wraper\">\r\n            <b-icon-twitter animation=\"throb\" v-if=\"busy\"></b-icon-twitter>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n      <p></p>\r\n\r\n      <div class=\"btn-icon-bundle\">\r\n        <input\r\n          :disabled=\"!usernameIsValid\"\r\n          type=\"image\"\r\n          @click=\"userSignIn()\"\r\n          src=\"https://cdn.cms-twdigitalassets.com/content/dam/developer-twitter/auth-docs/sign-in-with-twitter-gray.png.twimg.1920.png\"\r\n          alt=\"Twitter Sign In\"\r\n          style=\"width: fit-content; padding: 1rem 0rem\"\r\n        />\r\n        <transition name=\"load\">\r\n          <div class=\"loading-icon-wraper\">\r\n            <b-icon-twitter animation=\"throb\" v-if=\"busySignIn\"></b-icon-twitter>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n      <div v-if=\"twitterKey > 0\">You are signed in !</div>\r\n    </div>\r\n    <p></p>\r\n    <TwitterData :userData=\"user\" :key=\"twitterKey\" />\r\n    <GeneralData :userData=\"user\" v-on:updateUserData=\"updateUserData\" />\r\n    <FiltersData :userData=\"user\" v-on:updateUserData=\"updateUserData\" />\r\n    <ScoreData :userData=\"user\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport userServices from \"@/services/userServices.js\";\r\nimport TwitterData from \"@/components/TwitterData.vue\";\r\nimport GeneralData from \"@/components/GeneralData.vue\";\r\nimport FiltersData from \"@/components/FiltersData.vue\";\r\nimport ScoreData from \"@/components/ScoreData.vue\";\r\nvar jsonwebtoken = require(\"jsonwebtoken\");\r\nexport default {\r\n  name: \"UserSettings\",\r\n  components: {\r\n    TwitterData,\r\n    GeneralData,\r\n    FiltersData,\r\n    ScoreData,\r\n  },\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      id: null,\r\n      user: null,\r\n      jwt: null,\r\n      readAccountStatus: \"untried\",\r\n      busy: false,\r\n      busyCreatePopulate: false,\r\n      busySignIn: false,\r\n      twitterKey: 0,\r\n      tokenExpired: false,\r\n      token_iat: null,\r\n      timeleft: 0,\r\n    };\r\n  },\r\n  async created() {\r\n    //Getting id and username from JWT\r\n    this.jwt = new URL(window.location.href).searchParams.get(\"jwt\");\r\n    try {\r\n      let decoded = jsonwebtoken.decode(this.jwt);\r\n      this.id = decoded.accId;\r\n      this.username = decoded.accName;\r\n      this.token_iat = decoded.iat;\r\n\r\n      this.timeleft = decoded.exp - Math.floor(Date.now() / 1000);\r\n\r\n      await this.callUser(\"put\").catch((error) => console.log(\"error >> \", error));\r\n      this.readAccountStatus = \"success\";\r\n\r\n      //Setting up timer\r\n      const interval = setInterval(\r\n        function () {\r\n          if (this.timeleft > 0 || this.timeleft == null) {\r\n            this.timeleft = this.timeleft - 1;\r\n          } else {\r\n            clearInterval(interval);\r\n            this.timeleft = \"token revoked, session expired\";\r\n          }\r\n        }.bind(this),\r\n        1000,\r\n      );\r\n    } catch (err) {\r\n      console.log(\"err :>> \", err);\r\n      this.readAccountStatus = \"failed\";\r\n      return 1;\r\n    }\r\n  },\r\n  computed: {\r\n    usernameIsValid: function () {\r\n      if (this.username != null && this.username.length >= 4) {\r\n        return true;\r\n      } else if (this.username != null) {\r\n        return false;\r\n      }\r\n\r\n      return null;\r\n    },\r\n    twitterAccountStatus: function () {\r\n      if (this.user != null && this.user.twitter != null) {\r\n        if (this.user.acc == undefined) {\r\n          return \"errorReadingAccount\";\r\n        }\r\n        if (this.user.twitter.likes == undefined) {\r\n          return \"accountIsPrivate\";\r\n        }\r\n        return \"readable\";\r\n      }\r\n      return \"notLoaded\";\r\n    },\r\n    userLink: function () {\r\n      return \"https://twitter.com/\" + this.username;\r\n    },\r\n  },\r\n  methods: {\r\n    async callUser() {\r\n      this.busyCreatePopulate = true;\r\n      if (this.username !== null) {\r\n        userServices\r\n          .getOrCreateUser(this.jwt)\r\n          .then((res) => {\r\n            if (res.error && res.error.name == \"TokenExpiredError\") {\r\n              this.tokenExpired = true;\r\n              alert(\r\n                \"Request failed because your link is expired, ask a new one or contact me on Discord if the issue persists\",\r\n              );\r\n            } else if (res) {\r\n              this.user = res;\r\n              this.readAccountStatus = \"success\";\r\n            } else {\r\n              this.readAccountStatus = \"failed\";\r\n            }\r\n            this.busyCreatePopulate = false;\r\n          })\r\n          .catch((error) => console.error(\"error :>> \", error));\r\n      }\r\n    },\r\n    /*request the 5Chat oauth_token, then redirects the user to a sign-in page,\r\n    and finally, retrieves the user tokens and iD for loading*/\r\n    async userSignIn() {\r\n      if (this.user != null && this.user.twitter !== undefined) {\r\n        let userblocks = null;\r\n        this.busySignIn = true;\r\n        let oauth_token = null;\r\n\r\n        let apiRequestTokens = await userServices.getRequestToken(this.jwt).catch((err) => {\r\n          console.log(\"[signup-requesttoken]err :>> \", err);\r\n        });\r\n        if (apiRequestTokens.data) {\r\n          if (apiRequestTokens.data.error && apiRequestTokens.data.error.name == \"TokenExpiredError\") {\r\n            this.tokenExpired = true;\r\n            alert(\r\n              \"Request failed because your link is expired, ask a new one or contact me on Discord if the issue persists\",\r\n            );\r\n          } else if (apiRequestTokens.data.error === undefined) {\r\n            if (apiRequestTokens.data.status === \"USER_BLOCKS\") {\r\n              console.log(\"apiRequestTokens.data.blocks :>> \", apiRequestTokens.data.blocks);\r\n              userblocks = apiRequestTokens.data.blocks;\r\n            } else if (apiRequestTokens.data.status == \"BOT_TOKENS\") {\r\n              console.log(\"apiRequestToken.data :>> \", apiRequestTokens.data);\r\n              oauth_token = apiRequestTokens.data.tokens.oauth_token;\r\n\r\n              //In this case, user tokens werent set, API returns bot tokens allowing for user token access\r\n              let params = `scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\r\nwidth=600,height=720,left=100,top=100`;\r\n              open(\r\n                `https://api.twitter.com/oauth/authenticate?oauth_token=${oauth_token}&screen_name=${this.username}&force_login=true`,\r\n                \"loginWithTwitter\",\r\n                params,\r\n              );\r\n              //While the user is accepting / refusing, loop database query waiting for answer.\r\n              let apiRequestTokens_loop = await userServices.getRequestToken_loop(this.jwt).catch((err) => {\r\n                console.log(\"[signup-loop] err :>> \", err);\r\n              });\r\n              console.log(\"apiRequestTokens_loop returned :>> \", apiRequestTokens_loop);\r\n              if (apiRequestTokens_loop.data && apiRequestTokens_loop.data.error) {\r\n                console.log(\"error occured during loop = \", apiRequestTokens_loop.data.loop);\r\n              } else if (apiRequestTokens_loop.data.status == \"TIMEDOUT\") {\r\n                alert(\r\n                  \"Twitter Sign In timed out, if you denied 5Chat read rights, ignore this warning, otherwise, try again (faster)\",\r\n                );\r\n              } else if (apiRequestTokens_loop.data.status == \"USER_BLOCKS\") {\r\n                userblocks = apiRequestTokens_loop.data.blocks;\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"apiRequestTokens.data.error :>> \", apiRequestTokens.data.error_tldr);\r\n        }\r\n        this.busySignIn = false;\r\n        this.user.twitter.blocks = userblocks;\r\n        this.twitterKey += 1;\r\n      } else {\r\n        alert(\r\n          'Would you please mind entering your twitter @ before, and hit \"Create Or Populate User\" thank u (wont be in final release',\r\n        );\r\n      }\r\n    },\r\n    async updateUserData(payload) {\r\n      this.busy = true;\r\n      this.user[payload.attribute] = payload.userData;\r\n      let packet = {};\r\n      packet[payload.attribute] = payload.userData;\r\n      packet.id = this.id;\r\n      userServices\r\n        .postUserData(this.jwt, packet, payload.attribute)\r\n        .then((res) => {\r\n          if (res.data && res.data.error && res.data.error.name == \"TokenExpiredError\") {\r\n            this.tokenExpired = true;\r\n            alert(\r\n              \"Request failed because your link is expired, ask a new one or contact me on Discord if the issue persists\",\r\n            );\r\n          }\r\n          this.busy = false;\r\n        })\r\n        .catch((e) => {\r\n          this.busy = false;\r\n          console.log(e);\r\n        });\r\n    },\r\n    async deleteMyData() {\r\n      let delQuery = await userServices\r\n        .deleteUser(this.jwt)\r\n        .catch((error) => console.log(\"error deleting user:>> \", error));\r\n      if (delQuery.data.error && delQuery.data.error.name == \"TokenExpiredError\") {\r\n        this.tokenExpired = true;\r\n        alert(\r\n          \"Request failed because your link is expired, ask a new one or contact me on Discord if the issue persists\",\r\n        );\r\n      } else if (delQuery.error === undefined) {\r\n        //Redirect to home page\r\n        this.$router.push(\"/\");\r\n      } else {\r\n        alert(\"error deleting user data\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.btn-icon-bundle {\r\n  display: flex;\r\n\r\n  .load-enter-active,\r\n  .load-leave-active {\r\n    transition: opacity 0.5s;\r\n  }\r\n  .load-enter, .load-leave-to /* .fade-leave-active below version 2.1.8 */ {\r\n    opacity: 0;\r\n  }\r\n\r\n  .loading-icon-wraper {\r\n    padding: 5px;\r\n    align-items: center;\r\n    color: #0d6efd;\r\n    padding-left: 1rem;\r\n    display: flex;\r\n  }\r\n}\r\n\r\n#user-settings-compo {\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  padding: 1.5rem;\r\n}\r\n\r\n.button {\r\n  width: max-content;\r\n}\r\n\r\n.button-delete {\r\n  width: max-content;\r\n  padding: 0rem 0.75rem;\r\n}\r\n\r\n#twitter-name {\r\n  color: rgb(83, 172, 255);\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  outline: 0 none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-left: 5px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}