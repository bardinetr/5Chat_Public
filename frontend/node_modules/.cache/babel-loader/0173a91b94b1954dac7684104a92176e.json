{"remainingRequest":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\babel-loader\\lib\\index.js!L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\src\\services\\userServices.js","dependencies":[{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\src\\services\\userServices.js","mtime":1631465992852},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["L:/softDev/personal/5Chat/twitterBot/frontend/src/services/userServices.js"],"names":["axios","backend_url","process","env","VUE_APP_BACKEND_URL","getUser","id","username","method","console","log","queryId","get","catch","error","response","status","JSON","stringify","data","request","message","res","put","Error","getOrCreateUser","getFakeUser","getUserBasicData","postUserData","attribute","post","getRequestToken","acc","auth_token","getRequestToken_loop","deleteUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst backend_url = process.env.VUE_APP_BACKEND_URL;\r\n\r\nexport default {\r\n  // GETTING DATA\r\n  async getUser(id, username, method) {\r\n    console.log(\"id :>> \", id);\r\n    console.log(\"username :>> \", username);\r\n    let queryId = \"-1\";\r\n    if (id != null) {\r\n      queryId = id;\r\n    }\r\n    if (method == \"get\") {\r\n      let res = await axios\r\n        .get(backend_url + `/api/user/${queryId}/${username}`)\r\n        .catch(error => {\r\n          if (error.response) {\r\n            /*\r\n             * The request was made and the server responded with a\r\n             * status code that falls out of the range of 2xx\r\n             */\r\n            console.log(\r\n              `API sent back ${error.response.status} status : ${JSON.stringify(\r\n                error.response.data,\r\n              )}`,\r\n            );\r\n          } else if (error.request) {\r\n            /*\r\n             * The request was made but no response was received, `error.request`\r\n             * is an instance of XMLHttpRequest in the browser and an instance\r\n             * of http.ClientRequest in Node.js\r\n             */\r\n            console.log(error.request);\r\n          } else {\r\n            // Something happened in setting up the request and triggered an Error\r\n            console.log(\"Error\", error.message);\r\n          }\r\n          return false;\r\n        });\r\n\r\n      console.log(\"[getUser] res :>> \", res);\r\n      return res.data;\r\n    } else if (method == \"put\") {\r\n      let res = await axios\r\n        .put(backend_url + `/api/user/${queryId}/${username}`)\r\n        .catch(error => {\r\n          if (error.response) {\r\n            /*\r\n             * The request was made and the server responded with a\r\n             * status code that falls out of the range of 2xx\r\n             */\r\n            console.log(\r\n              `API sent back ${error.response.status} status : ${JSON.stringify(\r\n                error.response.data,\r\n              )}`,\r\n            );\r\n          } else if (error.request) {\r\n            /*\r\n             * The request was made but no response was received, `error.request`\r\n             * is an instance of XMLHttpRequest in the browser and an instance\r\n             * of http.ClientRequest in Node.js\r\n             */\r\n            console.log(error.request);\r\n          } else {\r\n            // Something happened in setting up the request and triggered an Error\r\n            console.log(\"Error\", error.message);\r\n          }\r\n          return false;\r\n        });\r\n      console.log(\"[getUser] res :>> \", res);\r\n      return res.data;\r\n    } else {\r\n      throw new Error(\"invalid method entered, either put or get\");\r\n    }\r\n  },\r\n  async getOrCreateUser(id, username) {\r\n    let queryId = id;\r\n    if (id == null) {\r\n      queryId = \"-1\";\r\n    }\r\n    let res = await axios\r\n      .put(backend_url + `/api/user?accId=${queryId}&accName=${username}`)\r\n      .catch(error => {\r\n        if (error.response) {\r\n          /*\r\n           * The request was made and the server responded with a\r\n           * status code that falls out of the range of 2xx\r\n           */\r\n          console.log(\r\n            `API sent back ${error.response.status} status : ${JSON.stringify(\r\n              error.response.data,\r\n            )}`,\r\n          );\r\n        } else if (error.request) {\r\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\r\n          console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request and triggered an Error\r\n          console.log(\"Error\", error.message);\r\n        }\r\n        return false;\r\n      });\r\n    console.log(\"[getOrCreateUser] res :>> \", res);\r\n    return res.data;\r\n  },\r\n  async getFakeUser() {\r\n    let res = await axios.get(backend_url + \"/api/user/fake/-1/-1\").catch(error => {\r\n      if (error.response) {\r\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\r\n        console.log(\r\n          `FAKE API sent back ${error.response.status} status : ${JSON.stringify(\r\n            error.response.data,\r\n          )}`,\r\n        );\r\n      } else if (error.request) {\r\n        /*\r\n         * The request was made but no response was received, `error.request`\r\n         * is an instance of XMLHttpRequest in the browser and an instance\r\n         * of http.ClientRequest in Node.js\r\n         */\r\n        console.log(error.request);\r\n      } else {\r\n        // Something happened in setting up the request and triggered an Error\r\n        console.log(\"Error\", error.message);\r\n      }\r\n      return false;\r\n    });\r\n    console.log(\"res :>> \", res);\r\n    return res.data;\r\n  },\r\n\r\n  async getUserBasicData(username) {\r\n    let res = await axios\r\n      .get(backend_url + \"/api/twitter/user/basicdata/\" + username)\r\n      .catch(error => {\r\n        if (error.response) {\r\n          console.log(\r\n            `BASIC TWITTER DATA sent back ${\r\n              error.response.status\r\n            } status : ${JSON.stringify(error.response.data)}`,\r\n          );\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Error\", error.message);\r\n        }\r\n        return false;\r\n      });\r\n    console.log(\"[userServices] basicUserData :>> \", res);\r\n    return res;\r\n  },\r\n\r\n  // POSTING DATA TO DYNAMODB\r\n  async postUserData(username, data, attribute) {\r\n    let res = await axios\r\n      .post(backend_url + \"/api/dynamodb/user/\" + attribute + \"/\" + username, data)\r\n      .catch(error => {\r\n        if (error.response) {\r\n          console.log(\r\n            `API sent back ${error.response.status} status : ${JSON.stringify(\r\n              error.response.data,\r\n            )}`,\r\n          );\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Error\", error.message);\r\n        }\r\n        return false;\r\n      });\r\n    return res;\r\n  },\r\n\r\n  //Grabs the 5Chat oauth_token from the API or the USER tokens if already in DB\r\n  async getRequestToken(acc, id) {\r\n    let auth_token = await axios\r\n      .get(`${backend_url}/api/twitter/userauth/front?accName=${acc}&accId=${id}`)\r\n      .catch(error => {\r\n        console.log(\"Error\", error.message);\r\n        return false;\r\n      });\r\n    return auth_token;\r\n  },\r\n\r\n  //Awaits for the database to be updated with user tokens if first call returned BOT_TOKENS\r\n  async getRequestToken_loop(acc, id) {\r\n    let auth_token = await axios\r\n      .get(`${backend_url}/api/twitter/userauth/loop?accName=${acc}&accId=${id}`)\r\n      .catch(error => {\r\n        console.log(\"Error\", error.message);\r\n        return false;\r\n      });\r\n    return auth_token;\r\n  },\r\n\r\n  //Delete user\r\n  async deleteUser(acc, id) {\r\n    let res = await axios\r\n      .get(backend_url + `/api/dynamodb/deleteuser?accId=${id}&accName=${acc}`)\r\n      .catch(error => {\r\n        if (error.response) {\r\n          console.log(\r\n            `DELETE USER DB sent back ${error.response.status} status : ${JSON.stringify(\r\n              error.response.data,\r\n            )}`,\r\n          );\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Error\", error.message);\r\n        }\r\n        return false;\r\n      });\r\n    console.log(\"deleteUser res :>> \", res);\r\n    return res;\r\n  },\r\n};\r\n"]}]}