{"remainingRequest":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\babel-loader\\lib\\index.js!L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\src\\services\\userServices.js","dependencies":[{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\src\\services\\userServices.js","mtime":1628470575760},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"L:\\softDev\\personal\\5Chat\\twitterBot\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["L:/softDev/personal/5Chat/twitterBot/frontend/src/services/userServices.js"],"names":["axios","backend_url","process","env","VUE_APP_BACKEND_URL","getUsers","get","res","data","getUser","id","username","method","queryId","catch","error","response","console","log","status","JSON","stringify","request","message","put","getOrCreateUser","getFakeUser","postUserData","attribute","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst backend_url = process.env.VUE_APP_BACKEND_URL;\r\n\r\nexport default {\r\n  // GETTING DATA\r\n  async getUsers() {\r\n    let res = await axios.get(backend_url + \"/api/users\");\r\n    return res.data;\r\n  },\r\n  async getUser(id, username, method) {\r\n    let queryId = \"-1\";\r\n    if (id != null) {\r\n      queryId = id;\r\n    }\r\n    if (method == \"get\") {\r\n      let res = await axios\r\n        .get(backend_url + `/api/user/${queryId}/${username}`)\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            /*\r\n             * The request was made and the server responded with a\r\n             * status code that falls out of the range of 2xx\r\n             */\r\n            console.log(\r\n              `API sent back ${error.response.status} status : ${JSON.stringify(\r\n                error.response.data\r\n              )}`\r\n            );\r\n          } else if (error.request) {\r\n            /*\r\n             * The request was made but no response was received, `error.request`\r\n             * is an instance of XMLHttpRequest in the browser and an instance\r\n             * of http.ClientRequest in Node.js\r\n             */\r\n            console.log(error.request);\r\n          } else {\r\n            // Something happened in setting up the request and triggered an Error\r\n            console.log(\"Error\", error.message);\r\n          }\r\n          return false;\r\n        });\r\n\r\n      console.log(\"res :>> \", res);\r\n      return res.data;\r\n    } else if (method == \"put\") {\r\n      let res = await axios\r\n        .put(backend_url + `/api/user/${queryId}/${username}`)\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            /*\r\n             * The request was made and the server responded with a\r\n             * status code that falls out of the range of 2xx\r\n             */\r\n            console.log(\r\n              `API sent back ${error.response.status} status : ${JSON.stringify(\r\n                error.response.data\r\n              )}`\r\n            );\r\n          } else if (error.request) {\r\n            /*\r\n             * The request was made but no response was received, `error.request`\r\n             * is an instance of XMLHttpRequest in the browser and an instance\r\n             * of http.ClientRequest in Node.js\r\n             */\r\n            console.log(error.request);\r\n          } else {\r\n            // Something happened in setting up the request and triggered an Error\r\n            console.log(\"Error\", error.message);\r\n          }\r\n          return false;\r\n        });\r\n      console.log(\"res :>> \", res);\r\n      return res.data;\r\n    }\r\n  },\r\n  async getOrCreateUser(id, username) {\r\n    let queryId = id;\r\n    if (id == null) {\r\n      queryId = \"-1\";\r\n    }\r\n    let res = await axios\r\n      .put(backend_url + `/api/user/${queryId}/${username}`)\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          /*\r\n           * The request was made and the server responded with a\r\n           * status code that falls out of the range of 2xx\r\n           */\r\n          console.log(\r\n            `API sent back ${error.response.status} status : ${JSON.stringify(\r\n              error.response.data\r\n            )}`\r\n          );\r\n        } else if (error.request) {\r\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\r\n          console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request and triggered an Error\r\n          console.log(\"Error\", error.message);\r\n        }\r\n        return false;\r\n      });\r\n    console.log(\"res :>> \", res);\r\n    return res.data;\r\n  },\r\n  async getFakeUser() {\r\n    let res = await axios\r\n      .get(backend_url + \"/api/user/fake/-1/-1\")\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          /*\r\n           * The request was made and the server responded with a\r\n           * status code that falls out of the range of 2xx\r\n           */\r\n          console.log(\r\n            `FAKE API sent back ${\r\n              error.response.status\r\n            } status : ${JSON.stringify(error.response.data)}`\r\n          );\r\n        } else if (error.request) {\r\n          /*\r\n           * The request was made but no response was received, `error.request`\r\n           * is an instance of XMLHttpRequest in the browser and an instance\r\n           * of http.ClientRequest in Node.js\r\n           */\r\n          console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request and triggered an Error\r\n          console.log(\"Error\", error.message);\r\n        }\r\n        return false;\r\n      });\r\n    console.log(\"res :>> \", res);\r\n    return res.data;\r\n  },\r\n\r\n  // POSTING DATA TO DYNAMODB\r\n  async postUserData(username, data, attribute) {\r\n    let res = await axios\r\n      .post(\r\n        backend_url + \"/api/dynamodb/user/\" + attribute + \"/\" + username,\r\n        data\r\n      )\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(\r\n            `API sent back ${error.response.status} status : ${JSON.stringify(\r\n              error.response.data\r\n            )}`\r\n          );\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Error\", error.message);\r\n        }\r\n        return false;\r\n      });\r\n    return res;\r\n  },\r\n};\r\n"]}]}